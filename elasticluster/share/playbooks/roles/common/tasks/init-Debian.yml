---
#
# Set up the package manager and its Ansible module for installing packages
#

# see Issues #541 and #548
- name: Ensure Google Cloud signing keys are available
  get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /etc/apt/trusted.gpg.d/google-cloud-packages-archive-keyring.gpg
    backup: yes

- name: Ensure extra repositories are present (Ubuntu)
  apt_repository:
    repo="deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} universe multiverse"
    state=present
    mode=0444
  when: is_ubuntu

- name: Ensure the APT package cache is updated
  apt:
    update_cache: yes
    cache_valid_time: 0
    allow_unauthenticated: '{{ not insecure_https_downloads|default("no")|bool }}'

- name: Install Ansible `apt` module dependencies
  # the `apt` module depends on `python-apt` to do package-level work,
  # so we need to resort to a raw invocation of `apt-get`
  command: |
    apt-get install -y {{item.name}}
  args:
    creates: '{{item.creates}}'
  become: yes
  loop:
    - { name: 'python-apt', creates: '/usr/share/doc/python-apt' }

- name: Uninstall `aptitude`
  # since Ansible 2.6, the `apt` module conflicts with `aptitude` when
  # `allow_unauthenticated: yes` is used -- so remove it and let
  # Ansible use `apt-get` instead
  command: |
    apt-get remove --purge -y {{item.name}}
  args:
    removes: '{{item.creates}}'
  become: yes
  loop:
    - { name: 'aptitude', creates: '/usr/bin/aptitude' }

- name: Upgrade all installed packages to latest version
  apt:
    upgrade: safe
    allow_unauthenticated: '{{ not insecure_https_downloads|default("no")|bool }}'
  when: 'upgrade_packages|default(True)'

- name: Ensure additional packages are installed
  apt:
    name: '{{item}}'
    state: '{{ pkg_install_state }}'
    allow_unauthenticated: '{{ not insecure_https_downloads|default("no")|bool }}'
  loop:
    - apt-transport-https
    # these are required by Ansible's `debconf` module
    - debconf
    - debconf-utils


# Apparently some systemd commands (e.g., `hostnamectl` -- possibly others)
# *require* D-Bus but the Debian 8 cloud VM image does not have it installed
# (see issues #392, #393).  So, ensure it is installed.
- name: Ensure additional packages are installed (Debian 8)
  apt:
    name: '{{item}}'
    state: '{{ pkg_install_state }}'
    allow_unauthenticated: '{{ not insecure_https_downloads|default("no")|bool }}'
  loop:
    - dbus
  when: 'is_debian_8_or_later'


- name: Provide workaround for https://github.com/ansible/ansible-modules-core/issues/4472
  set_fact:
    __at__: '='


- name: Install policy package for service autostart
  apt:
    name: 'policyrcd-script-zg2'
    state: '{{ pkg_install_state }}'
    allow_unauthenticated: '{{ not insecure_https_downloads|default("no")|bool }}'


- name: Install policy script for service autostart
  copy:
    dest: '/etc/policy-rc.d'
    src: 'etc/policy-rc.d'
    mode: 0555
