---
#
# Install CUDA toolkit and runtime
#

- name: Load distribution-dependent parameters
  include: 'init-{{ ansible_os_family }}.yml'


- name: Ensure the `nouveau` kernel module is not loaded
  modprobe:
    name: nouveau
    state: absent


- name: Blacklist the `nouveau` kernel module
  kernel_blacklist:
    name: nouveau
    state: present


# FIXME: this is temporary, until Ubuntu bug #1742160 is solved.
# See https://bugs.launchpad.net/ubuntu/+source/nvidia-graphics-drivers-384/+bug/1742160
- name: Force install of ``nvidia-384` kernel driver
  package:
    name: '{{ item }}'
    state: present
  with_items:
    # `nvidia-384` fails to install if `ubuntu-drivers-common` is not
    # there (actually, it wants to place files in directory
    # `/usr/lib/nvidia` which is provided by `ubuntu-drivers-common`)
    - ubuntu-drivers-common
    - 'cuda-drivers=384.111-1'
  when: 'is_ubuntu_16_04'


- name: Install CUDA packages
  package:
    name: 'cuda-{{cuda_version_major}}-{{cuda_version_minor}}'
    state: latest


- name: Add CUDA binaries to PATH
  template:
    dest: '/etc/profile.d/{{item}}'
    src: 'etc/profile.d/{{item}}.j2'
    mode: 0444
    owner: root
    group: root
  with_items:
    - 'cuda.sh'
    - 'cuda.csh'


- name: Check if CUDA devices exists
  include: _check_nvidia_dev.yml


- name: Enable CUDA devices by rebooting
  include: _reboot_and_wait.yml
  when: 'allow_reboot|default(false) and not _cuda_check_devices.stat.exists'
