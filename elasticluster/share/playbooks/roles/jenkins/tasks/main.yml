---
# Only if this is an ubuntu
- name: Configure apt key for jenkins repository
  action: apt_key url=http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key state=present
  when: is_debian_or_ubuntu

- name: Add jenkins APT repository
  action: apt_repository repo='deb http://pkg.jenkins-ci.org/debian binary/' state=present
  when: is_debian_or_ubuntu

- name: Remove non-existing src apt repository
  action: apt_repository repo='deb-src http://pkg.jenkins-ci.org/debian binary/' state=absent
  when: is_debian_or_ubuntu

- name: Add old-python apt repository
  action: apt_repository repo=ppa:fkrull/deadsnakes state=present
  when: is_debian_or_ubuntu

- name: Install jenkins
  apt:
    name: '{{j_packages}}'
    state: '{{ pkg_install_state }}'
    force: yes
    allow_unauthenticated: '{{ not insecure_https_downloads|default("no")|bool }}'
  when: is_debian_or_ubuntu

# Only if this is a CentOS (NOT TESTED!)
- name: Configure YUM repository
  action: get_url url=http://pkg.jenkins-ci.org/redhat/jenkins.repo dest=/etc/yum.repos.d/jenkins.repo
  when: is_centos

- name: Import repository key
  action: shell rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
  when: is_centos

- name: Configure YUM repository
  action: yum name=jenkins state=present
  when: is_centos

# GC3Pie specific configuration
- name: Configure jenkins for GC3Pie
  action: template src=jenkins/templates/config.xml.j2 dest=/var/lib/jenkins/config.xml owner=jenkins
  when: inventory_hostname in groups.gc3
  notify:
    - restart jenkins

- name: create jenkins directory job
  action: file path=/var/lib/jenkins/jobs/{{item}} owner=jenkins state=directory
  loop: j_jobs
  when: inventory_hostname in groups.gc3

- name: configure jenkins job
  action: copy src=jenkins/files/jobs/{{item}}/config.xml dest=/var/lib/jenkins/jobs/{{item}}/config.xml owner=jenkins
  loop: j_jobs
  when: inventory_hostname in groups.gc3
  notify:
    - restart jenkins
