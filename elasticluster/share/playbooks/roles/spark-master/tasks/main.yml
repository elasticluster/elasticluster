---

- name: Configure Apache2
  apt:
    name: apache2
    state: present

- name: configure help page
  template:
    src=index.html.j2
    dest=/var/www/html/index.html

- name: enable and start help page
  systemd:
    name: apache2
    enabled: yes
    masked: no
    state: restarted

- name: Alluxio systemd service config
  template:
    src='alluxio.service.j2'
    dest='/etc/systemd/system/alluxio.service'

- name: enable and start alluxio service and ensure it is not masked
  systemd:
    name: alluxio
    enabled: yes
    masked: no
    state: restarted

- name: Create Spark History log directory
  file:
    path='{{spark_history_path}}'
    state=directory
    owner=spark
    group=spark
    mode=0777

- name: Spark History systemd service config
  template:
    src='spark-history.service.j2'
    dest='/etc/systemd/system/spark-history.service'

- name: enable and start spark history service and ensure it is not masked
  systemd:
    name: spark-history
    enabled: yes
    masked: no
    state: restarted

- name: Spark Master systemd service config
  template:
    src='spark-master.service.j2'
    dest='/etc/systemd/system/spark-master.service'

- name: enable and start spark master service and ensure it is not masked
  systemd:
    name: spark-master
    enabled: yes
    masked: no
    state: restarted

- stat:
    path: /usr/lib/zeppelin
  register: zeppelin_symlink

- name: Create Apache Zeppelin user
  user:
    name: zeppelin
    group: spark
    system: True
    createhome: False
  when: zeppelin_symlink.stat.islnk is not defined

- name: download Zeppelin installer
  get_url:
    url: '{{spark_zeppelin_uri}}'
    dest: '/tmp/{{spark_zeppelin_package}}'
  when: zeppelin_symlink.stat.islnk is not defined

- name: Unpack Zeppelin
  unarchive:
    src: '/tmp/{{spark_zeppelin_package}}'
    dest: /usr/lib/
    owner: zeppelin
    group: spark
    remote_src: True
  when: zeppelin_symlink.stat.islnk is not defined

- name: Create Zeppelin symlink
  file: src="/usr/lib/{{spark_zeppelin_package_root}}" dest="/usr/lib/zeppelin" state=link
  when: zeppelin_symlink.stat.islnk is not defined

- name: Zeppelin configuration files
  template:
    src='{{item}}.j2'
    dest='/usr/lib/zeppelin/conf/{{item}}'
    owner=zeppelin
    group=spark
  with_items:
    - zeppelin-site.xml
    - zeppelin-env.sh

- name: Create Zeppelin log directory
  file:
    path='/var/log/zeppelin'
    state=directory
    owner=zeppelin
    group=spark
  when: zeppelin_symlink.stat.islnk is not defined

- name: Create Zeppelin Configuration symlink
  file: src="/usr/lib/zeppelin/conf" dest="/etc/zeppelin" state=link
  when: zeppelin_symlink.stat.islnk is not defined

- name: Zeppelin Server systemd service config
  template:
    src='zeppelin.service.j2'
    dest='/etc/systemd/system/zeppelin.service'
  when: zeppelin_symlink.stat.islnk is not defined

- name: Find Zeppelin Apache Commons Lang3 jar
  find:
    paths: /usr/lib/zeppelin/lib/
    patterns: 'commons-lang3*.jar'
  register: zeppelin_apache_commons_lang3

- name: Add Apache Commons Lang3 in interpreter path
  copy:
    src: '/usr/lib/zeppelin/lib/{{ item.path | basename }}'
    dest: '/usr/lib/zeppelin/lib/interpreter/{{ item.path | basename }}'
    remote_src: yes
  with_items:
    - '{{zeppelin_apache_commons_lang3.files}}'

- name: enable and start zeppelin service and ensure it is not masked
  systemd:
    name: zeppelin
    enabled: yes
    masked: no
    state: restarted
