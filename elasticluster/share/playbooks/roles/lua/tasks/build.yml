---

- name: Install build-time dependencies (Debian-compatible)
  package:
    name='{{item}}'
    state=present
  with_items:
    - gcc
    - libc6-dev
    - libncurses-dev
    - libreadline-dev
    - make
    - tcl
  when: '{{is_debian_compatible}}'


- name: Install build-time dependencies (RHEL-compatible)
  package:
    name='{{item}}'
    state=present
  with_items:
    - "@Development tools"
    - ncurses-devel
    - ncurses-static
    - readline-devel
    - readline-static
    - tcl
  when: '{{is_rhel_compatible}}'


- name: Create required directories
  file:
    dest: '{{item}}'
    state: directory
    mode: 0755
  with_items:
    - '{{lua_install_dir}}/'
    - '{{lua_source_dir}}/'
    - '{{lua_build_dir}}/'


- name: Download Lua sources
  get_url:
    url: '{{lua_source_url}}'
    dest: '{{lua_source_dir}}/lua-{{LUA_VERSION}}.tar.gz'
    mode: 0444

# XXX: Ansible issues a warning message "Consider using unarchive module rather
# than running tar"; however, `unarchive` seems to misteriously fail on CentOS
# 7.2.1511, and there have been many reports of it failing when file names
# contain "unexpected" characters (e.g., spaces or non-ASCII characters)
#
# If `unarchive` worked correctly, this would be the Ansible stanza to use::
#
#   - name: Extract Lua sources
#     unarchive:
#       src='{{ lua_source_dir }}/lua-{{LUA_VERSION}}.tar.gz'
#       dest='{{ lua_source_dir }}/'
#       copy=no
#
- name: Extract Lua sources
  command:
    'tar -xzf "{{ lua_source_dir }}/lua-{{LUA_VERSION}}.tar.gz" -C "{{ lua_source_dir }}"'
  args:
    creates='{{ lua_source_dir }}/lua-{{LUA_VERSION}}/configure'


- name: Set up Lua compilation
  command: './configure --with-static=yes --prefix="{{lua_install_dir}}" {{lua_configure_extra_opts}}'
  args:
    chdir: "{{lua_build_dir}}"
    # cannot check `makefile` which is the real output of the `./configure`
    # process, as the tarball *does* contain one already...
    creates: config.status


- name: Compile Lua
  command: make
  args:
    chdir: "{{lua_build_dir}}"


- name: Is installation directory writable?
  command: test -w "{{lua_install_dir}}/"
  ignore_errors: yes
  # need to force Ansible not to perform tasks as `root` automatically, else the
  # `make install` task up next fails with "Permission denied"
  become: no
  register: lua_install_dir_writable


- name: Install Lua
  command: make install
  args:
    chdir: "{{lua_build_dir}}"
  become: '{% if lua_install_dir_writable|success %}no{% else %}yes{% endif %}'
