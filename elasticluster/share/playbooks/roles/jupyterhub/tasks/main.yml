---
#
# Install JupyterHub and run it on port 443
#
# Follows installation instructions at:
# - https://github.com/jupyterhub/jupyterhub/blob/master/README.md#installation
#

- name: Fail if not Debian/Ubuntu compatible
  fail:
    msg: The JupyterHub role currently only supports Debian/Ubuntu
  when: 'not is_debian_compatible'


- name: Create directories
  file:
    path: '{{item}}'
    state: directory
    mode: 0755
  loop:
    - /etc/jupyterhub
    - /var/lib/jupyterhub


- name: Install SW dependencies
  apt:
    name: '{{item}}'
    state: '{{ pkg_install_state }}'
    allow_unauthenticated: '{{ not insecure_https_downloads|default("no")|bool }}'
  loop:
    - nodejs-legacy
    - npm
    - supervisor


- name: Install JupyterHub
  command: |
    /opt/anaconda3/bin/conda install jupyterhub -c conda-forge


- name: Create secret tokens
  shell: |
    openssl rand -hex {{ item.bytes/2 }} | tr -d '\n' > '/var/lib/jupyterhub/{{ item.name }}'
  args:
    creates: '/var/lib/jupyterhub/{{ item.name }}'
  loop:
    - { name: jupyterhub_cookie_secret, bytes: 32 }
    - { name: jupyterhub_proxy_auth_token, bytes: 64 }


- name: Deploy configuration file
  copy:
    dest: '/etc/jupyterhub/jupyterhub_config.py'
    src:  'etc/jupyterhub/jupyterhub_config.py'
    mode: 0400


# see: https://serialized.net/2013/04/simply-generating-self-signed-ssl-certs-with-ansible/
- name: Create self-signed SSL cert
  command: |
    openssl req -x509 -new -batch -days 3650 -subj "/O=ElastiCluster/OU=JupyterHub/CN={{ansible_fqdn}}"  -newkey rsa:2048 -nodes -outform PEM -keyout /etc/jupyterhub/jupyterhub.key.pem -out /etc/jupyterhub/jupyterhub.crt.pem -extensions usr_cert
  args:
    creates: /etc/jupyterhub/jupyterhub.key.pem


# FIXME: should the following be reworked into an independent `supervisord` role?
- name: Manage JupyterHub with `supervisord`
  copy:
    dest: '/etc/supervisor/conf.d/jupyterhub.conf'
    src: 'etc/supervisor/conf.d/jupyterhub.conf'
    mode: 0444
  register: _deploy_supervisord_conf_for_jupyterhub


- name: Ensure supervisord is running and starts again at boot
  service:
    name: supervisor
    enabled: yes
    state: started


- name: Ensure supervisord re-reads config
  shell: |
    supervisorctl reread;
    supervisorctl update;
  when: _deploy_supervisord_conf_for_jupyterhub is changed


- name: Ensure JupyterHub has been started by supervisord
  command: |
    supervisorctl start jupyterhub


- name: Allow inbound HTTPS connections
  iptables:
    action: insert
    chain: INPUT
    protocol: tcp
    destination_port: 443
    jump: ACCEPT
    state: present
  become: yes
