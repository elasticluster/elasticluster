#
# Elasticluster Azure Slurm/GridEngine Example
#
# This is a complete and self-contained example
# that should get you started with running SLURM
# and GridEngine clusters on MS Azure.
#
# For more details about the configuration, see:
# http://elasticluster.readthedocs.io/en/latest/configure.html
#

[cloud/azure]
provider=azure
subscription_id=****REPLACE WITH YOUR SUBSCRIPTION ID****
# see: https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal#get-application-id-and-authentication-key
tenant_id=***REPLACE WITH TENANT ID***
client_id=***REPLACE WITH APPLICATION KEY***
secret=***REPLACE WITH APPLICATION SECRET***

[login/azure]
# note: `image_user` depends on the `image_id`!
image_user = ubuntu
image_user_sudo = root
image_sudo = True
# keypair used to run stuff on the nodes.
user_key_name=elasticluster
user_key_private=****REPLACE WITH PRIVATE KEY****
user_key_public=****REPLACE WITH PUBLIC KEY****



#
# SLURM:
#

# there is nothing Azure-specific in the "setup" section;
# in fact, it can be re-used verbatim with *any* cloud provider or base image
[setup/slurm]
provider=ansible
frontend_groups=slurm_master
compute_groups=slurm_worker

# the `cluster` section binds together `cloud`, `login`, and `setup` info
# and then adds some cluster-specific settings
[cluster/azure-slurm]
global_var_ansible_ssh_host_key_dsa_public=''
cloud=azure
login=azure
setup=slurm
location=East US
# one frontend node is normal for SLURM/GridEngine
frontend_nodes=1
# change this as needed
compute_nodes=2

# in Azure, `image_id` is a `/`-separated 4-uple, consisting of:
# publisher (e.g., `canonical`), offer (e.g., `ubuntuserver`),
# sku (e.g., `16.04.0-LTS`), version (e.g., `latest`)
image_id=canonical/ubuntuserver/16.04.0-LTS/latest

# see: https://azure.microsoft.com/en-us/pricing/details/virtual-machines/linux/
flavor = Standard_B1ms

security_group=default


#
# GridEngine:
#

# there is nothing Azure-specific in the "setup" section;
# in fact, it can be re-used verbatim with *any* cloud provider or base image
[setup/gridengine]
provider=ansible
frontend_groups=gridengine_master
compute_groups=gridengine_worker

# the `cluster` section binds together `cloud`, `login`, and `setup` info
# and then adds some cluster-specific settings
[cluster/azure-gridengine]
global_var_ansible_ssh_host_key_dsa_public=''
cloud=azure
login=azure
setup=gridengine

frontend_nodes=1
compute_nodes=2

# note: flavors depend on location!
location=East US

# in Azure, `image_id` is a `/`-separated 4-uple, consisting of:
# publisher (e.g., `canonical`), offer (e.g., `ubuntuserver`),
# sku (e.g., `16.04.0-LTS`), version (e.g., `latest`)
image_id=canonical/ubuntuserver/16.04.0-LTS/latest

# see: https://azure.microsoft.com/en-us/pricing/details/virtual-machines/linux/
flavor = Standard_B1ms

security_group=default
